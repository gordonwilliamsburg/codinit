[tool.poetry]
name = "codinit"
version = "0.1.0"
description = "An LLM based coding assistant that helps coders generate code based on a specific set of libraries."
authors = ["Nesrine Zarrouki <zarroukinesrine@gmail.com>"]
readme = "README.md"
packages = [{include = "codinit", from = "src"}]
classifiers = ["Private :: Do Not Upload"]

[tool.poetry.dependencies]
python = "^3.11"
toml = "^0.10.2"
python-dotenv = "^1.0.0"
pydantic = "^1.10.7"
pyyaml = "^6.0"
pandas = "^1.5.3"
langchain = "^0.0.340"
openai = "^1.3.5"
gitpython = "^3.1.31"
chromadb = "^0.3.26"
beautifulsoup4 = "^4.12.2"
requests = "^2.31.0"
selenium = "^4.10.0"
sqlalchemy = "^2.0.17"
tiktoken = "^0.4.0"
sentence-transformers = "^2.2.2"
weaviate-client = "^3.26.0"
types-requests = "^2.31.0.1"
lxml = "^4.9.2"
fastapi = "^0.97.0"
uvicorn = "^0.22.0"
unstructured = "^0.7.6"
tqdm = "^4.65.0"
libcst = "^1.0.1"
llama-index = "^0.8.22"
nest-asyncio = "^1.5.6"
apify-client = "^1.4.1"
tenacity = "^8.2.3"
isort = "^5.12.0"
pylint = "^3.0.1"
flake8 = "^6.0.0"
virtualenv = "^20.25.0"

[tool.poetry.group.dev.dependencies]
black = "^23.1.0"
mypy = "^1.1.1"
flake8 = "^6.0.0"
pre-commit = "^3.2.0"
flake8-docstrings = "^1.7.0"
pydocstyle = "^6.3.0"
isort = "^5.12.0"
types-pyyaml = "^6.0.12.8"
pylint = "^3.0.1"
flake8-pyproject = "^1.2.3"
ipython = "^8.13.1"
ipykernel = "^6.28.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.1.4"
mkdocstrings = "^0.20.0"
mkdocstrings-python = "^0.8.3"
pygments = "^2.15.0"
mkdocs-gitbook = "^0.0.1"
mkdocs-dracula-theme = "^1.0.4"

[tool.poetry.group.test.dependencies]
pytest = "^7.2.2"
pytest-cov = "^4.0.0"
pytest-mock = "^3.12.0"
docker = "^7.0.0"


[tool.poetry.group.viz.dependencies]
streamlit = "^1.20.0"
plotly = "^5.14.0"
seaborn = "^0.12.2"
streamlit-nested-layout = "^0.1.1"
streamlit-aggrid = "^0.3.4.post3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

#set isort profile to "black" and apply same formatting rules as black does, such as line length and commas.
[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
mypy_path=["./src", "./tests"]
plugins = [
  "pydantic.mypy"
]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
ignore_missing_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.flake8]
exclude = ".venv"
ignore = ["E203", "E266", "E501", "W503", "F403", "F401"]
max-line-length = 80
max-complexity = 18
select = ["B", "C", "E", "F", "W", "T4", "B9"]
docstring-convention = "google"
